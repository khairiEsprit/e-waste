package com.example.ewaste.Controllers;

import com.example.ewaste.Repository.ParticipationRepository;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.control.Label;


import com.example.ewaste.Entities.Participation;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;

public class ParticipationController {

    // FXML elements (form fields)
    @FXML
    private TextField firstNameField;

    @FXML
    private TextField lastNameField;

    @FXML
    private TextField emailField;

    @FXML
    private TextField phoneField;

    @FXML
    private TextField cityField;

    @FXML
    private TextField countryField;

    @FXML
    private TextField zipCodeField;

    @FXML
    private Button submitButton;

    // Create an instance of ParticipationRepository
    private final ParticipationRepository participationRepository = new ParticipationRepository();

    // Handle form submission
    @FXML
    public void handleSubmit() {
        // Retrieve input values from the form
        String firstName = firstNameField.getText();
        String lastName = lastNameField.getText();
        String email = emailField.getText();
        String phone = phoneField.getText();
        String city = cityField.getText();
        String country = countryField.getText();
        String zipCode = zipCodeField.getText();

        // Validate the form (simple checks)
        if (firstName.isEmpty() || lastName.isEmpty() || email.isEmpty()) {
            showAlert("Error", "Please fill in all required fields.");
            return;
        }

        // Create a Participation object
        Participation participation = new Participation(
                0,  // ID is set to 0 since it will be auto-generated by the DB
                firstName,
                lastName,
                email,
                phone,
                city,
                zipCode
        );

        // Call the repository's create method
        boolean success = participationRepository.create(participation);

        // Show success or failure message
        if (success) {
            showAlert("Success", "Your participation has been successfully registered.");
            clearForm();  // Optionally clear the form after successful submission
        } else {
            showAlert("Error", "There was an issue registering your participation. Please try again.");
        }
    }

    // Helper method to show alerts
    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    // Optionally clear the form fields after successful submission
    private void clearForm() {
        firstNameField.clear();
        lastNameField.clear();
        emailField.clear();
        phoneField.clear();
        cityField.clear();
        countryField.clear();
        zipCodeField.clear();
    }
}
